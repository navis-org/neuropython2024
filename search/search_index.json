{"config":{"lang":["en"],"separator":"[\\s\\-\\_,:!=\\[\\]()\"/]+|(?!\\b)(?=[A-Z][a-z])|\\.(?!\\d)|&[lg]t;","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"NeuroPython 2024","text":"<p>Welcome to NeuroPython 2024: Analysis and Integration of Single-Cell Neuronal Data in Python </p> <p>This is free two-day workshop introducing computational workflows for the analysis and integration of electrophysiological, morphological, and transcriptomic data of neurons using Python. We will cover the packages <code>Pynapple</code>, <code>NeMoS</code>, <code>Navis</code>, and <code>CAJAL</code>, providing a hands-on experience with these tools using public Patch-clamp and Patch-seq datasets.</p>"},{"location":"#where","title":"Where?","text":"<p>Online! We'll share a Zoom link ahead of the workshop.</p>"},{"location":"#when","title":"When?","text":"<p>September 23rd-24th. It's two half days to make sure people in both US and Europe can attend. Please see the Schedule for details.</p>"},{"location":"#interested","title":"Interested?","text":"<p>Registration is closed as of September 12, 2024.</p>"},{"location":"#already-signed-up","title":"Already signed up?","text":"<p>Great! Then head over to Preparations to learn about what you need to do before the workshop to make sure you're all set.</p>"},{"location":"preparing/","title":"Preparations","text":""},{"location":"preparing/#setting-up-python","title":"Setting up Python","text":"<p>The workshop will consist of a mix of introductory talks for the individual Python packages and a number of interactive coding sessions - see the Schedule for details.</p> <p>You are welcome to just cruise  along but to make the most of it you will probably want to follow the coding and participate in the exercises on your own machine.</p> <p>In general, we expect you to have at least basic familiarty with Python including the standard data science libraries such as <code>numpy</code> and <code>pandas</code>.</p> <p>Most of the workshop will be using Jupyter for interactive data analysis. Please see their website for install instructions.</p>"},{"location":"preparing/#prerequisites","title":"Prerequisites","text":"<p>Windows, MacOS, and Linux should all work. You can also run Python in a Jupyter notebook in the cloud, using Google Colab.</p> <p>The tutorials are compatible with Python version &gt;= 3.9. You should have a current version of <code>pip</code> (&gt;= 23) and <code>setuptools</code> (&gt;= 68).</p> <p>We will use the command <code>python3</code> to invoke Python on Linux, but on Windows the appropriate command may be <code>python</code>. You should find out what the appropriate command is for Python on your system.</p> <p>Both <code>pip</code> and <code>setuptools</code> can be updated using pip itself with</p> <pre><code>python3 -m pip install --upgrade pip setuptools\n</code></pre> <p>In the tutorials, we use some software which is available from PyPI but not as a <code>conda</code> package. If you prefer to use <code>conda</code>, you will have to install some things in a <code>conda</code> environment using a <code>conda</code>-managed version of <code>pip</code>.</p> <p>In order to avoid dependency conflicts with other Python packages on your device, including packages managed by the system package manager rather than <code>pip</code> or <code>conda</code>, you should create a virtual environment to install all Python packages that will be used in the workshop. Start by navigating to the directory in which you plan to work, and follow the instructions appropriate for your package manager.</p> <p>Alternatively, if you plan to use Google Colab for everything, you can skip to that section.</p>"},{"location":"preparing/#dependencies","title":"Dependencies","text":"<p>The workshop will focus on four main packages.</p> <ul> <li> <p> Pynapple</p> <p>Pynapple is a light-weight python library for neurophysiological data analysis.</p> </li> <li> <p> NeMoS</p> <p>NeMoS (Neural ModelS) is a statistical modeling framework optimized for systems neuroscience and powered by JAX.</p> </li> <li> <p> CAJAL</p> <p>CAJAL is a Python library for multi-modal cell morphology analyses using Gromov-Wasserstein (GW) distance.</p> </li> <li> <p> Navis</p> <p>Navis is a package for Neuron Analysis and Visualization.</p> </li> </ul> <p>In addition to these core tools, we will rely on some other software:</p> <ul> <li><code>scanpy</code>, a Python package for the analysis of single-cell gene expression data</li> <li><code>Jupyter</code>, an interactive environment for evaluating Python code and plotting graphs</li> <li><code>ipywidgets</code>, which extends the functionality of Jupyter (e.g., progress bars)</li> <li><code>leidenalg</code>, an implementation of the Leiden clustering algorithm</li> <li><code>umap-learn</code>, which is useful for visualizing the clustering structure of high-dimensional data</li> <li><code>pandas</code>, a dataframe library for manipulating and filtering tabular data</li> <li><code>plotly</code>, a rich visualization library</li> </ul>"},{"location":"preparing/#installing-dependencies-with-pip","title":"Installing dependencies with Pip","text":"<p><code>Pip</code> is the standard package manager for Python. We recommend you use a virtual environment which you can create like so:</p> <pre><code>python3 -m venv ./neuro_workshop\n</code></pre> <p>After creating the virtual environment, you should activate it, which sets certain environment variables and path variables to ensure that Python commands and modules refer to code in the ./neuro_workshop folder. The way this is done depends on your operating system:</p> Windows PowerShellLinux and MacOS <p>In Windows Powershell, the command is:</p> <pre><code>.\\neuro_workshop\\Scripts\\activate.ps1\n</code></pre> <p>For Linux and MacOS, the command is</p> <pre><code>source ./neuro_workshop/bin/activate\n</code></pre> <p>You can tap out of the virtual environment with this command:</p> <pre><code>deactivate\n</code></pre> <p>Help?</p> <p>The section \"How venvs work\" of the Python venv documentation contains a table containing the appropriate command indexed by operating system and shell.</p> <p>Before continuing, check the left-hand side of your terminal prompt to ensure that the virtual environment is activated! Then run this to install all required dependencies in one go:</p> <pre><code>python3 -m pip install jupyterlab ipywidgets cajal scanpy leidenalg navis umap-learn pandas plotly pynapple nemos matplotlib requests\n</code></pre> <p>You should be good to go! Try firing up Jupyter lab and import e.g. <code>navis</code>!</p>"},{"location":"preparing/#installing-dependencies-with-conda","title":"Installing dependencies with Conda","text":"<p><code>Conda</code> is a package manager commonly used in data science and bioinformatics. We do not provide a <code>conda</code> package for our tools; these instructions discuss how to use <code>conda</code> to create a sandbox for <code>pip</code>. Instructions for working with virtual environments in <code>conda</code> can be found here. You can open a <code>conda</code> terminal from the Windows start menu by launching the program \"Anaconda Powershell Prompt.\"</p> <p>Create and activate a virtual environment with:</p> <pre><code>conda create --prefix ./neuro_workshop python=3.11\nconda activate ./neuro_workshop\n</code></pre> <p>Install dependencies as follows:</p> <pre><code>conda config --append channels conda-forge\nconda install numpy scipy jupyterlab ipywidgets scanpy leidenalg umap-learn pandas plotly\n</code></pre> <p>Now run this:</p> <pre><code>pip install cajal navis[all] pynapple nemos\n</code></pre> <p>and <code>pip</code> should install the relevant dependencies into the ./neuro_workshop directory you have just created. Try firing up Jupyter lab and import e.g. <code>cajal</code>!</p>"},{"location":"preparing/#google-colab","title":"Google Colab","text":"<p>Google Colab is a cloud computing service which can execute Jupyter notebooks stored in Google Drive. To use Google Colab for this tutorial, go to https://colab.research.google.com/ and click <code>File</code> &gt; <code>New Notebook in Drive</code></p> <p>Install the Python dependencies using <code>!</code> to run a shell command from a Jupyter cell:</p> <pre><code>!pip install cajal scanpy leidenalg navis umap-learn pandas plotly pynapple nemos matplotlib requests\n</code></pre> <p>Important</p> <p>When starting a Google Colab runtime, some libraries such as <code>matplotlib</code> will have already been loaded in the background. To make sure that any updates installed via our call to <code>!pip install</code> actually take effect, you should click <code>Runtime</code> -&gt; \"Restart Session\" to restart the Python kernel.</p>"},{"location":"preparing/#data","title":"Data","text":"<p>During the workshop, we will be analyzing data from the 2020 paper \"Integrated Morphoelectric and Transcriptomic Classification of Cortical GABAergic Cells\" by Gouwens, Sorensen, Baftizadeh et. al.</p> <p>All artifacts for the NAVis (Monday) and CAJAL (Tuesday) presentations are available in this Dropbox folder. Just download the whole thing and put it somewhere you will be able to find it during the workshop.</p> <p>For Pynapple and Nemos (Monday), the workshop tutorial discusses how to download the necessary data - see Part 1 and Part 3, in the \"Data Streaming\" section.</p>"},{"location":"preparing/#getting-help","title":"Getting Help","text":"<p>The workshop organizers can be contacted for installation help in the Slack group for the workshop or using the Discussions in this website's Github repository.</p>"},{"location":"schedule/","title":"Schedule","text":"<p>The schedule is split over two days and centered around noon on the US east coast to allow people from both US west and Europe to attend:</p> Day 1 (09/23) 10:50am - 11:00am Welcome and Introduction to Day 1 11:00am - 1:00pm Analysis of Electrophysiological Data using Pynapple and NeMos Instructors: Edoardo Balzani (Flatiron), Adrien Peyrache (McGill), Guillaume Viejo (Flatiron), Alex Williams (NYU) 1:00pm - 1:30pm Break 1:30pm - 3:30pm Analysis and Visualization of Neuronal Morphologies using Navis Instructor:  Philipp Schlegel (Cambridge U.) Add day 1 to calendar: Google Calendar  \u2022  Outlook  \u2022  Office 365 Day 2 (09/24) 10:50am - 11:00am Welcome and Introduction to Day 2 11:00am - 1:00pm Analysis and Integration of Single-Cell Morphology, Electrophysiology, and Transcriptomic Data using CAJAL Instructors: Pablo Camara (UPenn), Patrick Nicodemus (UPenn) 1:00pm - 1:30pm Break 1:30pm - 2:30pm Open Discussion Add day 2 to calendar: Google Calendar  \u2022  Outlook  \u2022  Office 365 <p>All times are in EDT (Eastern Daylight Time), i.e. time in New York or Washington DC!</p> <p>Zoom links will be shared ahead of the workshop.</p>"}]}